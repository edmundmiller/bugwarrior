---
name: bugwarrior

on: [push, pull_request]

jobs:
  bugwarrior-test:
    runs-on: ubuntu-latest
    # We're currently seeing these complete in 1 minute.
    timeout-minutes: 5
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", 3.11]
        jira-version: [1.0.10, 2.0.0]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set Jira version ${{ matrix.jira-version }}
        run: echo "JIRAVERSION=${{ matrix.jira-version }}" >> "$GITHUB_ENV"
      - name: Run tests
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq -y \
            libffi-dev libssl-dev python3-venv taskwarrior
          task --version

          mkdir .venv
          python3 -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip setuptools

          pip install codecov
          pip install pytest-cov
          pip install -e .[all]

          pytest --cov=bugwarrior --cov-branch tests
          flake8
      - name: Coverage
        uses: codecov/codecov-action@v5
        with:
          files: ./.coverage
        # Fragile way to only run codecov once.
        # See https://github.com/codecov/codecov-action/issues/40.
        if: |
          matrix.python-version == 3.9 &&
          matrix.jira-version == '2.0.0'
  bugwarrior-multiarch-test:
    runs-on: ubuntu-latest
    # We're currently seeing these complete in 10-30 minutes.
    timeout-minutes: 60
    strategy:
      matrix:
        jira-version: [1.0.10, 2.0.0]
        architecture: [aarch64, ppc64le]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set Jira version ${{ matrix.jira-version }}
        run: echo "JIRAVERSION=${{ matrix.jira-version }}" >> "$GITHUB_ENV"
      - name: Run tests on given architecture
        uses: uraimo/run-on-arch-action@v3
        with:
          arch: ${{ matrix.architecture }}
          distro: ubuntu_latest
          githubToken: ${{ github.token }}
          env: |
            # https://github.com/PyO3/setuptools-rust/issues/236
            CARGO_NET_GIT_FETCH_WITH_CLI: "true"
          install: |
            apt-get update -qq
            apt-get install -qq -y \
              cargo git libffi-dev libjpeg-dev libssl-dev python3-dev python3-venv taskwarrior zlib1g-dev
            task --version
          run: |
            apt-get install -qq -y pkg-config libssl-dev

            mkdir .venv
            python3 -m venv .venv
            source .venv/bin/activate
            pip install --upgrade pip setuptools

            pip install -e .[all]

            pytest
  bugwarrior-development-uv-test:
    runs-on: ubuntu-latest
    # We're currently seeing these complete in 1 minute.
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
      - name: Install Dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq -y \
            libffi-dev libssl-dev taskwarrior
          task --version
      - name: Install uv
        uses: astral-sh/setup-uv@v6
      - name: Install Editable Installation
        run: uv sync --all-extras
      - name: Run tests
        run: uv run pytest
